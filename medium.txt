How to make simple blog using Laravel framework.
This tutorial for newbie developers which learned the basics of Laravel framework and want to apply knowledge into action.
project GitHub link https://github.com/AhmedYacoub/basic_blog
In this tutorial we will make:
User authentication.
Posts CRUD.
Store and show every comment and reply for a project.

First we need to understand the database schema illustrated in figure:
Project ERDHere is a list of what we are going to create:
install new Laravel project.
Create new database and edit .env file.
Create Models, Migrations and Controllers.
Edit migrations
Make authentication scaffolding.
Edit Models and create relationships.
Setup URL routes.
Design simple UI using Bootstrap 4.
Manual Testing.

In this tutorial, I assume you have LAMP stack and composer.
Install new Project
composer create-project --prefer-dist laravel/laravel BasicBlog
cd BasicBlog
Create new database and edit .env file
open terminal or CMD and issue the following command or just use your MySQL GUI client (Mysql workbench, phpmyadmin..)
mysql -u root
CREATE DATABASE basicblog CHARACTER SET utf8 COLLATE utf8_general_ci;
exit
open the project in your code editor and edit .env file as follows
DB_DATABASE=basicblog
DB_USERNAME=root
DB_PASSWORD=
Create Models, Migrations and Controllers
create Posts model with a migration file and controller
php artisan make:model Post -mc
create comments model with a migration file and controller
php artisan make:model Comment -mc
create comments model with a migration file and controller
php artisan make:model Reply -m
Edit migrations
open database/migrations/create_posts_table.php edit up() method as follows



open database/migrations/create_comments_table.php edit up() method as follows



open database/migrations/create_replies_table.php edit up() method as follows



Now it's time to edit our models: User, Post, Comment and Reply




Make authentication scaffolding
php artisan make:auth
this will generate Laravel basic login, register, forget password and home views, controller, middlewares..
Edit Models and create relationships
User model
